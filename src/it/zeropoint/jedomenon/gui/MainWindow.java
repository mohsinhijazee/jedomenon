/*
 * MainWindow.java
 *
 * Created on January 9, 2009, 12:08 PM
 */

package it.zeropoint.jedomenon.gui;
import it.zeropoint.jedomenon.rest.Database;
import it.zeropoint.jedomenon.rest.Database;
import javax.swing.JOptionPane;

/**
 *
 * @author  mohsinhijazee
 */
public class MainWindow extends javax.swing.JFrame {
  
  /** Creates new form MainWindow */
  public MainWindow() {
    initComponents();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    getDatabaseButton = new javax.swing.JButton();
    getAllDatabases = new javax.swing.JButton();
    deleteDatabase = new javax.swing.JButton();
    updateButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Celesus Convertor");

    getDatabaseButton.setText("Get Database");
    getDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        getDatabaseButtonActionPerformed(evt);
      }
    });

    getAllDatabases.setText("Get All databases");
    getAllDatabases.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        getAllDatabasesActionPerformed(evt);
      }
    });

    deleteDatabase.setText("Delete database");
    deleteDatabase.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteDatabaseActionPerformed(evt);
      }
    });

    updateButton.setText("Update");
    updateButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        updateButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(deleteDatabase)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(getAllDatabases)
            .addComponent(getDatabaseButton)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
        .addComponent(updateButton)
        .addGap(85, 85, 85))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap(115, Short.MAX_VALUE)
        .addComponent(getDatabaseButton)
        .addGap(18, 18, 18)
        .addComponent(getAllDatabases)
        .addGap(42, 42, 42)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(deleteDatabase)
          .addComponent(updateButton))
        .addGap(38, 38, 38))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void getDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDatabaseButtonActionPerformed
    try
    {
      Database d = new Database(6);
      String json = d.toJSON();
      String msg = "Database of ID 6:\n" + json;
      JOptionPane.showMessageDialog(this, msg);
      
      d = null;
      d = new Database(json);
      msg = "Created from JSON:\n" + json;
      JOptionPane.showMessageDialog(this, msg);
      
    }catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }
  }//GEN-LAST:event_getDatabaseButtonActionPerformed

  private void getAllDatabasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getAllDatabasesActionPerformed
    // TODO add your handling code here:
    Database d = new Database();
    
    try
    {
      Database[] a = d.getAll();
      String msg = "GET ALL: Length = " + a.length + "\n";
      
      for(int i = 0; i < a.length; i++)
      {
        msg += "\n\n" + a[i].toJSON();
      }
      
      JOptionPane.showMessageDialog(this, msg);
    }
    catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }
  }//GEN-LAST:event_getAllDatabasesActionPerformed

  private void deleteDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDatabaseActionPerformed
    try
    {
      Database d = new Database(6);
      if(d.delete())
        JOptionPane.showMessageDialog(this, "Deleted!");
      else
        JOptionPane.showMessageDialog(this, "Failed...");
      
    }
    catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }
  }//GEN-LAST:event_deleteDatabaseActionPerformed

  private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
    try
    {
      Database d = new Database(6);
      JOptionPane.showMessageDialog(this, "Before PUT:\n" + d.toJSON());
      d.setAttribute("name", "Updated BY JAVA!!!");
      d.put();
      d = null;
      d = new Database(6);
      JOptionPane.showMessageDialog(this, "After PUT:\n" + d.toJSON());
    }catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }
  }//GEN-LAST:event_updateButtonActionPerformed
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton deleteDatabase;
  private javax.swing.JButton getAllDatabases;
  private javax.swing.JButton getDatabaseButton;
  private javax.swing.JButton updateButton;
  // End of variables declaration//GEN-END:variables
  
}
