/*
 * MainWindow.java
 *
 * Created on January 9, 2009, 12:08 PM
 */

package it.zeropoint.jedomenon.gui;
import it.zeropoint.jedomenon.rest.Database;
import it.zeropoint.jedomenon.rest.Database;
import it.zeropoint.jedomenon.rest.Entity;
import it.zeropoint.jedomenon.rest.Resource;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author  mohsinhijazee
 */
public class MainWindow extends javax.swing.JFrame {
  
  /** Creates new form MainWindow */
  public MainWindow() {
    initComponents();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    getDatabaseButton = new javax.swing.JButton();
    getAllDatabases = new javax.swing.JButton();
    deleteDatabase = new javax.swing.JButton();
    updateButton = new javax.swing.JButton();
    postDatabaseButton = new javax.swing.JButton();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Celesus Convertor");

    getDatabaseButton.setText("GET");
    getDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        getDatabaseButtonActionPerformed(evt);
      }
    });

    getAllDatabases.setText("GETALL");
    getAllDatabases.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        getAllDatabasesActionPerformed(evt);
      }
    });

    deleteDatabase.setText("DELETE");
    deleteDatabase.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteDatabaseActionPerformed(evt);
      }
    });

    updateButton.setText("PUT");
    updateButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        updateButtonActionPerformed(evt);
      }
    });

    postDatabaseButton.setText("POST");
    postDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        postDatabaseButtonActionPerformed(evt);
      }
    });

    jButton1.setText("GET /entities.json");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    jButton2.setText("GET /details.json");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(deleteDatabase)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(getAllDatabases)
            .addComponent(getDatabaseButton)))
        .addGap(144, 144, 144)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jButton2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addGap(85, 85, 85))
              .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(postDatabaseButton))))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(jButton1)
            .addGap(62, 62, 62))))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(43, 43, 43)
        .addComponent(jButton1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(getDatabaseButton)
          .addComponent(postDatabaseButton)
          .addComponent(jButton2))
        .addGap(18, 18, 18)
        .addComponent(getAllDatabases)
        .addGap(42, 42, 42)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(deleteDatabase)
          .addComponent(updateButton))
        .addGap(38, 38, 38))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void getDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDatabaseButtonActionPerformed
    try
    {
      Resource.setBaseURL("http://localhost:3000");
      Database d = new Database(6);
      
      String json = d.toJSON(2);
      String msg = "Database of ID 6:\n" + json;
      JOptionPane.showMessageDialog(this, msg);
      
      d = null;
      d = new Database(Resource.buildFromJSON(json));
      msg = "Created from JSON:\n" + d.toJSON(2);
      JOptionPane.showMessageDialog(this, msg);
      
    }catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
      e.printStackTrace();
    }
  }//GEN-LAST:event_getDatabaseButtonActionPerformed

  private void getAllDatabasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getAllDatabasesActionPerformed
    

    Resource.setBaseURL("http://localhost:3000");
    
    
    try
    {
      Database d = new Database();
      Database[]  a = d.doGetAll();
      String msg = "GET ALL: Length = " + a.length + "\n";
      
      for(int i = 0; i < a.length; i++)
      {
        msg += "\n\n" + a[i].toJSON(2);
      }
      
      JOptionPane.showMessageDialog(this, msg);
    }
    catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }

  }//GEN-LAST:event_getAllDatabasesActionPerformed

  private void deleteDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDatabaseActionPerformed

    try
    {
      
      Database d = new Database(6);
      if(d.doDelete())
        JOptionPane.showMessageDialog(this, "Deleted!");
      else
        JOptionPane.showMessageDialog(this, "Failed...");
      
      d = new Database();
      d.setName("New Temp Database");
      d.setAccountURL("http://localhost:3000/accounts/1.json");
      d.doPost();
      JOptionPane.showMessageDialog(this, d.toJSON(2));
      
      if(d.doDelete(d.url()))
        JOptionPane.showMessageDialog(this, "Deleted!");
      else
        JOptionPane.showMessageDialog(this, "Failed...");
      
    }
    catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }

  }//GEN-LAST:event_deleteDatabaseActionPerformed

  private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
   
    try
    {
      Resource.setBaseURL("http://localhost:3000");
      Database d = new Database(6);
      JOptionPane.showMessageDialog(this, "Before PUT:\n" + d.toJSON(2));
      d.setName("Updated BY JAVA!!!");
      d.doPut();
      d = null;
      d = new Database(6);
      JOptionPane.showMessageDialog(this, "After PUT:\n" + d.toJSON(2));
    }catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }
   
  }//GEN-LAST:event_updateButtonActionPerformed

  private void postDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postDatabaseButtonActionPerformed
    // TODO add your handling code here:
    try
    {
      Resource.setBaseURL("http://localhost:3000");
      Database d = new Database();
      d.setName("MY NEWLY JAVA DATABASE");
      d.setAccountURL("http://localhost:3000/accounts/1.json");
      d.doPost();
      JOptionPane.showMessageDialog(this, d.toJSON(2));
    }
    catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e);
      e.printStackTrace();
    }
  }//GEN-LAST:event_postDatabaseButtonActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
    try
    {
      String baseURL = "http://localhost:3000";
      Resource.setBaseURL(baseURL);
      Database d = new Database(6);
      Entity[] entities = d.getEntities();
      
    }
    catch(Exception e)
      {
        JOptionPane.showMessageDialog(this, e);
        e.printStackTrace();
      }
  }//GEN-LAST:event_jButton1ActionPerformed
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton deleteDatabase;
  private javax.swing.JButton getAllDatabases;
  private javax.swing.JButton getDatabaseButton;
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton postDatabaseButton;
  private javax.swing.JButton updateButton;
  // End of variables declaration//GEN-END:variables
  
}
