/*
 * MainWindow.java
 *
 * Created on January 9, 2009, 12:08 PM
 */

package it.zeropoint.jedomenon.gui;
import it.zeropoint.jedomenon.rest.Database;
import it.zeropoint.jedomenon.rest.Database;
import it.zeropoint.jedomenon.rest.Detail;
import it.zeropoint.jedomenon.rest.Entity;
import it.zeropoint.jedomenon.rest.Resource;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author  mohsinhijazee
 */
public class MainWindow extends javax.swing.JFrame {
  
  /** Creates new form MainWindow */
  public MainWindow() {
    initComponents();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    getDatabaseButton = new javax.swing.JButton();
    getAllDatabasesButton = new javax.swing.JButton();
    deleteDatabaseButton = new javax.swing.JButton();
    putDatabaseButton = new javax.swing.JButton();
    postDatabaseButton = new javax.swing.JButton();
    getDatabaseEntitiesButton = new javax.swing.JButton();
    getDatabaseDetails = new javax.swing.JButton();
    getEntityButton = new javax.swing.JButton();
    getEntitiesButton = new javax.swing.JButton();
    postEntityButton = new javax.swing.JButton();
    putEntityButton = new javax.swing.JButton();
    deleteEntityButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Jedomenon");

    getDatabaseButton.setText("GET /database/6.json");
    getDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        getDatabaseButtonActionPerformed(evt);
      }
    });

    getAllDatabasesButton.setText("GET /databases.json");
    getAllDatabasesButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        getAllDatabasesButtonActionPerformed(evt);
      }
    });

    deleteDatabaseButton.setText("DELETE /databases/6.json");
    deleteDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteDatabaseButtonActionPerformed(evt);
      }
    });

    putDatabaseButton.setText("PUT /databases/6.json");
    putDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        putDatabaseButtonActionPerformed(evt);
      }
    });

    postDatabaseButton.setText("POST /databases.json");
    postDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        postDatabaseButtonActionPerformed(evt);
      }
    });

    getDatabaseEntitiesButton.setText("GET /entities.json");
    getDatabaseEntitiesButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        getDatabaseEntitiesButtonActionPerformed(evt);
      }
    });

    getDatabaseDetails.setText("GET /details.json");
    getDatabaseDetails.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        getDatabaseDetailsActionPerformed(evt);
      }
    });

    getEntityButton.setText("GET /entities/6.json");
    getEntityButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        getEntityButtonActionPerformed(evt);
      }
    });

    getEntitiesButton.setText("jButton4");

    postEntityButton.setText("jButton5");

    putEntityButton.setText("jButton6");

    deleteEntityButton.setText("jButton7");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(getDatabaseEntitiesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
          .addComponent(getDatabaseDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
          .addComponent(getDatabaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
          .addComponent(getAllDatabasesButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
          .addComponent(postDatabaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
          .addComponent(putDatabaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
          .addComponent(deleteDatabaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(getEntityButton)
          .addComponent(getEntitiesButton)
          .addComponent(postEntityButton)
          .addComponent(putEntityButton)
          .addComponent(deleteEntityButton))
        .addGap(287, 287, 287))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(getDatabaseEntitiesButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(getDatabaseDetails)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(getDatabaseButton)
          .addComponent(getEntityButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(getAllDatabasesButton)
          .addComponent(getEntitiesButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(postDatabaseButton)
          .addComponent(postEntityButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(putDatabaseButton)
          .addComponent(putEntityButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(deleteDatabaseButton)
          .addComponent(deleteEntityButton))
        .addContainerGap(49, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void getDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDatabaseButtonActionPerformed
    try
    {
      
      Database d = new Database(6);
      
      String json = d.toJSON(2);
      String msg = "Database of ID 6:\n" + json;
      System.out.print(json);
      JOptionPane.showMessageDialog(this, msg);
      
      d = null;
      d = new Database(Resource.buildFromJSON(json));
      msg = "Created from JSON:\n" + d.toJSON(2);
      JOptionPane.showMessageDialog(this, msg);
      
    }catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
      e.printStackTrace();
    }
  }//GEN-LAST:event_getDatabaseButtonActionPerformed

  private void getAllDatabasesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getAllDatabasesButtonActionPerformed
    

    
    
    
    try
    {
      Database d = new Database();
      Database[]  a = d.doGetAll();
      String json = "";
      
      for(int i = 0; i < a.length; i++)
        json += a[i].toJSON(2) + "\n";
      
      System.out.print(json);
      String msg = "Lenght of Database Array:" + a.length + "\n\n" + json;
      JOptionPane.showMessageDialog(this, msg);
    }
    catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }

}//GEN-LAST:event_getAllDatabasesButtonActionPerformed

  private void deleteDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDatabaseButtonActionPerformed

    try
    {
      
      Database d = new Database(6);
      if(d.doDelete())
        JOptionPane.showMessageDialog(this, "Deleted!");
      else
        JOptionPane.showMessageDialog(this, "Failed...");
      
      d = new Database();
      d.setName("New Temp Database");
      d.setAccountURL("http://localhost:3000/accounts/1.json");
      d.doPost();
      JOptionPane.showMessageDialog(this, d.toJSON(2));
      
      if(d.doDelete(d.url()))
        JOptionPane.showMessageDialog(this, "Deleted!");
      else
        JOptionPane.showMessageDialog(this, "Failed...");
      
    }
    catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }

}//GEN-LAST:event_deleteDatabaseButtonActionPerformed

  private void putDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_putDatabaseButtonActionPerformed
   
    try
    {
      
      Database d = new Database(6);
      JOptionPane.showMessageDialog(this, "Before PUT:\n" + d.toJSON(2));
      d.setName("Updated BY JAVA!!!");
      d.doPut();
      d = null;
      d = new Database(6);
      JOptionPane.showMessageDialog(this, "After PUT:\n" + d.toJSON(2));
    }catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e.toString());
    }
   
}//GEN-LAST:event_putDatabaseButtonActionPerformed

  private void postDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postDatabaseButtonActionPerformed
    // TODO add your handling code here:
    try
    {

      Database d = new Database();
      d.setName("MY NEWLY JAVA DATABASE");
      d.setAccountURL("http://localhost:3000/accounts/1.json");
      d.doPost();
      JOptionPane.showMessageDialog(this, d.toJSON(2));
    }
    catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e);
      e.printStackTrace();
    }
  }//GEN-LAST:event_postDatabaseButtonActionPerformed

  private void getDatabaseEntitiesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDatabaseEntitiesButtonActionPerformed
    // TODO add your handling code here:
    try
    {

      Database d = new Database(6);
      Entity[] entities = d.getEntities();
      String json = "";
      
      for(int i = 0; i < entities.length; i++)
      {
        json += entities[i].toJSON(2) + "\n";
      }
      
      System.out.print(json);
      JOptionPane.showMessageDialog(this, json);
      
    }
    catch(Exception e)
      {
        JOptionPane.showMessageDialog(this, e);
        e.printStackTrace();
      }
}//GEN-LAST:event_getDatabaseEntitiesButtonActionPerformed

  private void getDatabaseDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDatabaseDetailsActionPerformed
    // TODO add your handling code here:
    try
    {

      Database d = new Database(6);
      Detail[] details = d.getDetails();
      String json = "";
      for(int i = 0; i < details.length; i++)
        json += details[i].toJSON(2) + "\n";
      
      JOptionPane.showMessageDialog(this, json);
      System.out.print(json);
              
    }
    catch(Exception e)
    {
      JOptionPane.showMessageDialog(this, e);
      e.printStackTrace();
    }
}//GEN-LAST:event_getDatabaseDetailsActionPerformed

  private void getEntityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getEntityButtonActionPerformed
    
  }//GEN-LAST:event_getEntityButtonActionPerformed
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton deleteDatabaseButton;
  private javax.swing.JButton deleteEntityButton;
  private javax.swing.JButton getAllDatabasesButton;
  private javax.swing.JButton getDatabaseButton;
  private javax.swing.JButton getDatabaseDetails;
  private javax.swing.JButton getDatabaseEntitiesButton;
  private javax.swing.JButton getEntitiesButton;
  private javax.swing.JButton getEntityButton;
  private javax.swing.JButton postDatabaseButton;
  private javax.swing.JButton postEntityButton;
  private javax.swing.JButton putDatabaseButton;
  private javax.swing.JButton putEntityButton;
  // End of variables declaration//GEN-END:variables
  
}
